---
# The router instance group contains the following jobs:
#
# - global-properties: Dummy BOSH job used to host global parameters that are
#   required to configure SCF
#
# - authorize-internal-ca: Install both internal and UAA CA certificates
#
# - gorouter: Gorouter maintains a dynamic routing table based on updates
#   received from NATS and (when enabled) the Routing API. This routing table
#   maps URLs to backends. The router finds the URL in the routing table that
#   most closely matches the host header of the request and load balances across
#   the associated backends.
#
# Also: loggregator_agent
apiVersion: "apps/v1beta1"
kind: "StatefulSet"
metadata:
  name: "router"
  labels:
    skiff-role-name: "router"
spec:
  podManagementPolicy: "Parallel"
  replicas: 1
  serviceName: "router-set"
  template:
    metadata:
      annotations: {}
      labels:
        skiff-role-name: "router"
      name: "router"
    spec:
      containers:
      - env:
        - name: "DNS_HEALTH_CHECK_HOST"
          value: "127.0.0.1"
        - name: "FORCE_FORWARDED_PROTO_AS_HTTPS"
          value: "false"
        - name: "GARDEN_ROOTFS_DRIVER"
          value: "btrfs"
        - name: "INTERNAL_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "internal-ca-cert"
              name: "secrets"
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "KUBE_AZ"
          value: "z1"
        - name: "KUBE_SIZING_NATS_COUNT"
          value: "1"
        - name: "LOGGREGATOR_AGENT_CERT"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-cert"
              name: "secrets"
        - name: "LOGGREGATOR_AGENT_KEY"
          valueFrom:
            secretKeyRef:
              key: "loggregator-agent-key"
              name: "secrets"
        - name: "LOG_LEVEL"
          value: "info"
        - name: "MONIT_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "monit-password"
              name: "secrets"
        - name: "NATS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "nats-password"
              name: "secrets"
        - name: "ROUTER_BALANCING_ALGORITHM"
          value: "round-robin"
        - name: "ROUTER_CLIENT_CERT_VALIDATION"
          value: "request"
        - name: "ROUTER_FORWARDED_CLIENT_CERT"
          value: "always_forward"
        - name: "ROUTER_SERVICES_SECRET"
          valueFrom:
            secretKeyRef:
              key: "router-services-secret"
              name: "secrets"
        - name: "ROUTER_SSL_CERT"
          valueFrom:
            secretKeyRef:
              key: "router-ssl-cert"
              name: "secrets"
        - name: "ROUTER_SSL_KEY"
          valueFrom:
            secretKeyRef:
              key: "router-ssl-key"
              name: "secrets"
        - name: "ROUTER_STATUS_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "router-status-password"
              name: "secrets"
        - name: "ROUTER_TLS_PEM"
          valueFrom:
            secretKeyRef:
              key: "router-tls-pem"
              name: "secrets"
        - name: "SCF_LOG_PORT"
          value: "514"
        - name: "SCF_LOG_PROTOCOL"
          value: "tcp"
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "secrets"
        - name: "UAA_CLIENTS_GOROUTER_SECRET"
          valueFrom:
            secretKeyRef:
              key: "uaa-clients-gorouter-secret"
              name: "secrets"
        - name: "UAA_HOST"
          value: "uaa.cf-dev.io"
        - name: "UAA_PORT"
          value: "2793"
        image: "splatform/scf-router:92cbba7ad02c4f22b155bdcc8ab89e0ecbdbea0a"
        lifecycle:
          preStop:
            exec:
              command:
              - "/opt/fissile/pre-stop.sh"
        livenessProbe: ~
        name: "router"
        ports:
        - containerPort: 8000
          name: "router"
          protocol: "TCP"
        - containerPort: 443
          name: "router-ssl"
          protocol: "TCP"
        - containerPort: 443
          name: "doppler-ssl"
          protocol: "TCP"
        readinessProbe:
          exec:
            command:
            - "/opt/fissile/readiness-probe.sh"
            - "curl --silent --fail --head http://${HOSTNAME}:8080/health"
        resources:
          requests:
            memory: "135Mi"
            cpu: "4000m"
          limits: {}
        securityContext: ~
        volumeMounts: ~
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 600
      volumes: ~
---
apiVersion: "v1"
items:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "router-set"
  spec:
    clusterIP: "None"
    ports:
    - name: "router"
      port: 80
      protocol: "TCP"
      targetPort: 0
    - name: "router-ssl"
      port: 443
      protocol: "TCP"
      targetPort: 0
    - name: "doppler-ssl"
      port: 4443
      protocol: "TCP"
      targetPort: 0
    selector:
      skiff-role-name: "router"
- apiVersion: "v1"
  kind: "Service"
  metadata:
    name: "router-public"
  spec:
    externalIPs:
    - "192.168.77.77"
    ports:
    - name: "router"
      port: 80
      protocol: "TCP"
      targetPort: 8000
    - name: "router-ssl"
      port: 443
      protocol: "TCP"
      targetPort: 443
    - name: "doppler-ssl"
      port: 4443
      protocol: "TCP"
      targetPort: 443
    selector:
      skiff-role-name: "router"
kind: "List"
